{"meta":{"title":"evday","subtitle":null,"description":"学习笔记，生活随想~","author":"Mxuan","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"五种对抗样本攻击算法总结","slug":"adv1-attacks","date":"2020-03-30T05:27:55.000Z","updated":"2020-03-31T09:51:57.946Z","comments":true,"path":"2020/03/30/adv1-attacks/","link":"","permalink":"http://yoursite.com/2020/03/30/adv1-attacks/","excerpt":"深度学习遍地开花，在方方面面影响和改变着人们的生活，如在智能驾驶、人脸识别以及智能家居等方面的应用。它作为非常复杂的软件系统，也面临着黑客的恶意攻击。其中一类攻击便是对抗样本。下面，我将具体介绍对抗样本方面的一系列知识。","text":"深度学习遍地开花，在方方面面影响和改变着人们的生活，如在智能驾驶、人脸识别以及智能家居等方面的应用。它作为非常复杂的软件系统，也面临着黑客的恶意攻击。其中一类攻击便是对抗样本。下面，我将具体介绍对抗样本方面的一系列知识。 1 相关基础知识什么是对抗样本？对抗样本由Szegedy等人提出，是指在原始样本中添加一些人眼难以识别的噪声，使模型以高置信度给出错误的输出。添加了噪声后的样本即为对抗样本。置信度，是概率里的一个概念，指的是样本识别为特定目标的概率大小。 攻击的分类白盒攻击(White-Box Attack) &amp; 黑盒攻击(Black-Box Attack)白盒攻击：攻击者能够完整获取模型的结构，包括模型的组成以及具体的参数情况，并且可完整控制模型的输入。黑盒攻击：攻击者不了解模型结构，智能控制输入，通过比对输入和输出的关系进行下一步攻击。 无目标攻击(untargeted attack) &amp; 有目标攻击(targeted attack)无目标攻击：对抗样本输入模型，使得模型输出错误即可。有目标攻击：对抗样本输入模型，使得模型的输出结果不但是错误输出，该错误输出还是特定的目标输出。 梯度的概念梯度为，损失函数求导。在深度神经网络的训练中，通过损失函数的反馈计算梯度，从而不断调整模型内部各层的参数，使得损失函数最小化。 2 攻击算法一：FGSM算法FGSM论文内容点击这里FGSM(Fast Gradient Sign Method)是一种基于梯度生成对抗样本的算法。其目标是最大化损失函数$J(x^*,y)$来获取对抗样本$x^*$。$J$是用来衡量分类误差的损失函数。 原理：深度神经网络的训练，是追求损失函数最小化的过程。在求损失函数的最小值时，我们会沿着梯度的反方向移动，使用减号，即梯度下降算法。而FGSM算法可理解成梯度上升算法，即沿着梯度的方向移动，使用加号，求得损失函数的最大值。其中sign为符号函数，括号里是损失函数对$x$的偏导。扰动值$\\epsilon$是人为设定，但小于某一阈值。一旦扰动值超出阈值，该对抗样本会被人眼识别。 3 攻击算法二：BIM算法BIM论文点击这里BIM(Basic Iterative Method)算法也叫作I-FGSM算法，是FGSM算法的迭代。它将原扰动值$\\epsilon$进行$T$次的迭代，每次的干扰值$\\alpha=\\epsilon/T$。 4 攻击算法三：DeepFool算法DeepFool论文点击这里DeepFool算法基于超平面的分类思想，可精准地计算扰动值。 原理：分类面两侧对应不同的分类结果，要使分类错误，需将一侧的样本$x$移到另一侧，最小的且最精准的距离即为垂直分类面移动。通过式子求得扰动值$\\epsilon$，但这个扰动值只能使样本到达分类面，不足以越过，故最终的扰动值为$\\epsilon*(1+\\eta)$，其中$\\eta$的值远远小于1。 5 攻击算法四：JSMA算法JSMA论文点击这里JSMA算法是尽量减少对原样本修改像素的个数的算法。它引入了来自于计算机视觉领域的显著图概念。显著图，表示不同的输入特征对输出结果的影响程度。倘若发现原始样本中的某些特征，对应分类器的某个特定输出，则可以通过增强这些特征来使分类器产生指定输出。 原理：先是计算前向导数，再利用前向导数计算对抗显著图，从而找到对特定输出影响最大的特征值输入。由于找到单个满足要求的特征值很困难，通常是寻找影响最大的输入特征对。最后通过显著图找到需要改变的像素位置。 由于ImageNet数据集中样本的像素值太多，故无法使用JSMA算法。 6 攻击算法五：C&amp;W算法C&amp;W论文点击这里C&amp;W算法是基于优化的攻击算法。设置了一个特殊的损失函数来衡量输入与输出之间的差异。这个损失函数含有可调节的超参数，以及可控制生成的对抗样本的置信度的参数。该算法提出时，是针对蒸馏网络进行攻击。蒸馏网络对对抗样本进行防御的关键在于，对梯度进行遮蔽。但这种遮蔽是一种理想状态，无论遮蔽的效果多好，只要函数可导，就能得到梯度。","categories":[],"tags":[]},{"title":"如何用Github+Hexo搭建个人博客","slug":"build-course","date":"2019-09-12T07:42:23.000Z","updated":"2019-09-16T08:31:02.452Z","comments":true,"path":"2019/09/12/build-course/","link":"","permalink":"http://yoursite.com/2019/09/12/build-course/","excerpt":"本科时候，在潘学委的指导下搭建过博客，但后来因为一些原因，并不算完全搭建成功。这次终于完成了，把自己的搭建过程分享一下！我在搭建过程中，碰到很多小问题。这些都需要一点点地去解决，所以你需要足够的耐心很细心地去完成这个过程，忌浮躁！","text":"本科时候，在潘学委的指导下搭建过博客，但后来因为一些原因，并不算完全搭建成功。这次终于完成了，把自己的搭建过程分享一下！我在搭建过程中，碰到很多小问题。这些都需要一点点地去解决，所以你需要足够的耐心很细心地去完成这个过程，忌浮躁！ 1 准备工作在开始搭建前，你需要完成一系列的准备工作，确保之后过程的顺利。 注册好Github账号安装好Node.js、Git客户端 2 创建仓库登录Github后，创建一个名为你的用户名.github.io的仓库。例如，你注册github的用户名为test，那么就新建仓库test.github.io(注意必须是用户名，其他的名称无效，且不区分大小写)。创建完后，你的网站访问地址就是http://test.github.io。 注意：注册的邮箱必须验证，否则不会成功；仓库创建后不会立即生效，需要过一段时间(或长或短)。 仓库创建完成后，你可以进行相关的设置，包括选择博客的主题等。若以上一切成功，浏览器输入仓库名test.github.io就可以看到创建的博客页面。 3 配置SSH key提交代码时肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 1$ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory说明你是第一次使用git。 1ssh-keygen -t rsa -C &quot;邮件地址&quot; 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置-&gt; SSH and GPG keys -&gt; New SSH key：将刚复制的内容粘贴到key那里，title随便填，保存。 测试： 1$ ssh -T git@github.com # 注意邮箱地址不用改 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi liuxianan! You&#39;ve successfully authenticated, but GitHub does not provide shell access.看到这个信息说明SSH已配置成功！ 此时你还需要配置： 12$ git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称$ git config --global user.email &quot;xxx@qq.com&quot;// 填写你的github注册邮箱 4 使用Hexo写博客进入hexo官网下载Hexo 在终端中执行以下命令安装Hexo(很多命令既可以用 Windows 的 cmd 来完成，也可以使用 git bash 来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用 git bash 来执行) 1$ npm install -g hexo 4.1 初始化Hexo在电脑某个地方新建名为Hexo的文件夹，比如目录为~/Hexo，这个文件将来就作为你存放代码的地方。在终端执行以下命令 12$ cd ~/hexo$ hexo init 运行之后，Hexo会自动下载一些文件到这个目录里。 4.2 主题修改初始化的时候，Hexo已经帮我们写了一篇名为Hello World的文章，也有了默认的主题。我们可以根据个人喜好更该主题。 下面以yilia主题为例，首先下载这个主题： 12$ cd ~/hexo/$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 然后就可以在themes文件中看到yilia主题的文件 修改博客根目录_config.yml中的theme: landscape改为theme: yilia，然后重新执行hexo g来重新生成。如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下 public 的内容，然后再来重新生成和发布。 注意：hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的 在博客根目录（注意不是 yilia 根目录）执行以下命令： 1$ npm i hexo-generator-json-content --save 4.3 新建博客文章1$ hexo new &quot;title&quot; 然后打开title.md文件就可以开始写博客了。 4.4 部署发布1$ hexo g -d 建议：hexo g部署后，先用hexo s运行本地站点，在浏览器输入http://localhost:4000/查看运行结果，确认无误后再hexo d发布。 参考https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.htmlhttps://www.cnblogs.com/QianChia/p/10718874.html如何编写文章","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-11T08:33:16.000Z","updated":"2019-09-15T14:37:37.718Z","comments":true,"path":"2019/09/11/hello-world/","link":"","permalink":"http://yoursite.com/2019/09/11/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}